{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smita\\\\Desktop\\\\ReactWorks\\\\capstone\\\\client\\\\src\\\\components\\\\TimeEntryForm.js\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"../common/Form\";\nimport moment from \"moment\";\n\nclass TimeEntryForm extends Form {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {\n        date: \"\",\n        week: \" \",\n        workOrderId: \" \",\n        hours: \"\"\n      },\n      workOrders: [],\n      timeEntries: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      date: Joi.date().max(moment().add(3, \"months\").format(\"MM/DD/YYYY\")).min(moment().subtract(3, \"months\").format(\"MM/DD/YYYY\")).required().label(\"Date\"),\n      week: Joi.number(),\n      workOrderId: Joi.string().label(\"WorkOrderId\").required(),\n      // workOrderDesc: Joi.string().required().label(\"WorkOrderDesc\"),\n      hours: Joi.number().max(24).required()\n    };\n\n    this.doSubmit = async () => {\n      console.log(\"doSubmit\");\n      this.props.onSave(this.state.data);\n    };\n\n    this.customValidation = input => {\n      const {\n        date\n      } = this.state.data;\n      var customError = \" \";\n      var totalHoursperday = 0;\n      const origionaltimeEntries = this.state.timeEntries; // console.log(\"origionaltimeEntries\", origionaltimeEntries);\n\n      const timeEntriesforthedate = origionaltimeEntries.filter(m => m.date === date);\n\n      if (input.name === \"hours\") {\n        totalHoursperday = input.value;\n      }\n\n      for (let i = 0; i < timeEntriesforthedate.length; i++) {\n        if (input.name === \"workOrderId\") {\n          if (timeEntriesforthedate[i].date === date && timeEntriesforthedate[i].workOrder._id === input.value) {\n            return customError = \"Duplicate work order \";\n          }\n        }\n\n        if (input.name === \"hours\") {\n          totalHoursperday = parseInt(totalHoursperday) + timeEntriesforthedate[i].hours;\n\n          if (totalHoursperday > 24) {\n            return customError = \"Total hours per day can't be more than 24 \";\n          }\n        }\n      }\n\n      return customError > \" \" ? customError : null;\n    };\n  }\n\n  handleSelect(workOrderId) {\n    var selectedWorkOrder = this.state.workOrders.filter(m => m._id !== workOrderId);\n    const selectedDesc = selectedWorkOrder.map(o => o.desc);\n    return !workOrderId ? \" \" : selectedDesc;\n  }\n\n  mapToViewModel(TimeEntry) {\n    return {\n      _id: TimeEntry._id,\n      date: TimeEntry.date,\n      workOrderId: TimeEntry.workOrder._id,\n      week: TimeEntry.week,\n      // workOrderDesc: TimeEntry.workOrder.desc,\n      hours: TimeEntry.hours\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, this.renderInput(\"week\", \"Week\", \"readOnly\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, this.renderInput(\"date\", \"Date\", Date, \"readOnly\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, this.handleSelect(this.state.data.workOrderId)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, this.renderInput(\"hours\", \"Hours\", Number)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, this.renderButton(\"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.onDelete(this.props.timeEntry),\n      className: \"btn-warn btn-sm mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Delete\"))));\n  }\n\n}\n\nexport default TimeEntryForm;","map":{"version":3,"sources":["C:/Users/smita/Desktop/ReactWorks/capstone/client/src/components/TimeEntryForm.js"],"names":["React","Joi","Form","moment","TimeEntryForm","state","data","date","week","workOrderId","hours","workOrders","timeEntries","errors","schema","_id","string","max","add","format","min","subtract","required","label","number","doSubmit","console","log","props","onSave","customValidation","input","customError","totalHoursperday","origionaltimeEntries","timeEntriesforthedate","filter","m","name","value","i","length","workOrder","parseInt","handleSelect","selectedWorkOrder","selectedDesc","map","o","desc","mapToViewModel","TimeEntry","render","handleSubmit","renderInput","Date","Number","renderButton","onDelete","timeEntry"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"../common/Form\";\r\nimport moment from \"moment\";\r\n\r\nclass TimeEntryForm extends Form {\r\n    state = {\r\n        data: { date: \"\", week: \" \", workOrderId: \" \", hours: \"\" },\r\n        workOrders: [],\r\n        timeEntries: [],\r\n        errors: {},\r\n    };\r\n    \r\n    schema = {\r\n        _id: Joi.string(),\r\n        date: Joi.date()\r\n            .max(moment().add(3, \"months\").format(\"MM/DD/YYYY\"))\r\n            .min(moment().subtract(3, \"months\").format(\"MM/DD/YYYY\"))\r\n            .required()\r\n            .label(\"Date\"),\r\n        week: Joi.number(),\r\n        workOrderId: Joi.string().label(\"WorkOrderId\").required(),\r\n        // workOrderDesc: Joi.string().required().label(\"WorkOrderDesc\"),\r\n        hours: Joi.number().max(24).required(),\r\n      };\r\n    \r\n    doSubmit = async () => {\r\n        console.log(\"doSubmit\");\r\n        this.props.onSave(this.state.data);\r\n    };\r\n\r\n    handleSelect(workOrderId) {\r\n        var selectedWorkOrder = this.state.workOrders.filter(\r\n            (m) => m._id !== workOrderId\r\n        );\r\n        const selectedDesc = selectedWorkOrder.map((o) => o.desc);\r\n        return !workOrderId ? \" \" : selectedDesc;\r\n    }\r\n\r\n    mapToViewModel(TimeEntry) {\r\n        return {\r\n            _id: TimeEntry._id,\r\n            date: TimeEntry.date,\r\n            workOrderId: TimeEntry.workOrder._id,\r\n            week: TimeEntry.week,\r\n            // workOrderDesc: TimeEntry.workOrder.desc,\r\n            hours: TimeEntry.hours,\r\n        };\r\n    }\r\n    \r\n    customValidation = (input) => {\r\n        const { date } = this.state.data;\r\n    \r\n        var customError = \" \";\r\n        var totalHoursperday = 0;\r\n    \r\n        const origionaltimeEntries = this.state.timeEntries;\r\n        // console.log(\"origionaltimeEntries\", origionaltimeEntries);\r\n        const timeEntriesforthedate = origionaltimeEntries.filter(\r\n            (m) => m.date === date\r\n        );\r\n    \r\n        if (input.name === \"hours\") {\r\n            totalHoursperday = input.value;\r\n        }\r\n    \r\n        for (let i = 0; i < timeEntriesforthedate.length; i++) {\r\n            if (input.name === \"workOrderId\") {\r\n                if (\r\n                    timeEntriesforthedate[i].date === date &&\r\n                    timeEntriesforthedate[i].workOrder._id === input.value\r\n                ) {\r\n                    return (customError = \"Duplicate work order \");\r\n                }\r\n            }\r\n    \r\n            if (input.name === \"hours\") {\r\n                totalHoursperday =\r\n                    parseInt(totalHoursperday) + timeEntriesforthedate[i].hours;\r\n                if (totalHoursperday > 24) {\r\n                    return (customError = \"Total hours per day can't be more than 24 \");\r\n                }\r\n            }\r\n        }\r\n    \r\n        return customError > \" \" ? customError : null;\r\n    };\r\n    \r\n    render() {\r\n\r\n    return (\r\n        <form onSubmit={this.handleSubmit}>\r\n            <div className=\"row\">\r\n            <div className=\"mr-2\"></div>\r\n\r\n                <div className=\"col-1 m-1\">\r\n                    {this.renderInput(\"week\", \"Week\", \"readOnly\")}\r\n                </div>\r\n\r\n                <div className=\"col-2\">\r\n                    {this.renderInput(\"date\", \"Date\", Date, \"readOnly\")}\r\n                </div>\r\n\r\n                {/* <div className=\"col-2\">\r\n                    {this.renderSelect(\r\n                        \"workOrderId\",\r\n                        \"WorkOrder\",\r\n                        this.state.workOrders\r\n                    )}\r\n                </div> */}\r\n\r\n                <div className=\"col-3 \">\r\n                    {this.handleSelect(this.state.data.workOrderId)}\r\n                </div>\r\n\r\n                <div className=\"col-1\">\r\n                    {this.renderInput(\"hours\", \"Hours\", Number)}\r\n                </div>\r\n\r\n                <div className=\"col\">{this.renderButton(\"Save\")}</div>\r\n                \r\n                <div className=\"col\">\r\n                <button \r\n                    onClick={() => this.props.onDelete(this.props.timeEntry)} \r\n                    className=\"btn-warn btn-sm mt-3\">\r\n                    Delete\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        )\r\n    }    \r\n} \r\n\r\n\r\nexport default TimeEntryForm;"]},"metadata":{},"sourceType":"module"}