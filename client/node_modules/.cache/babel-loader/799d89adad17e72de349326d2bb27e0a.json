{"ast":null,"code":"import http from \"./httpServices\";\nconst apiEndpoint = \"/timeEntry\";\n\nfunction timeEntryUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getTimeEntries() {\n  console.log(\"test\", apiEndpoint);\n  return http.get(apiEndpoint);\n}\nexport function getTimeEntry(timeEntryId) {\n  return http.get(timeEntryUrl(timeEntryId));\n} // export function saveTimeEntry(timeEntry) {\n//   if (!timeEntry._id.startsWith(\"new\")) {\n//     const body = { ...timeEntry };\n//     delete body._id;\n//     delete body.week;\n//     delete body.workOrderDesc;\n//     return http.put(timeEntryUrl(timeEntry._id), body);\n//   } else {\n//     const body = { ...timeEntry };\n//     console.log(\"timeEntry\", timeEntry);\n//     delete body._id;\n//     delete body.week;\n//     delete body.workOrderDesc;\n//     return http.post(apiEndpoint, body);\n//   }\n// }\n// export function deleteTimeEntry(timeEntryId) {\n//   return http.delete(timeEntryUrl(timeEntryId));\n// }","map":{"version":3,"sources":["C:/Users/smita/Desktop/ReactWorks/capstone/client/src/services/TimeEntriesService.jsx"],"names":["http","apiEndpoint","timeEntryUrl","id","getTimeEntries","console","log","get","getTimeEntry","timeEntryId"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AAEA,MAAMC,WAAW,GAAG,YAApB;;AAEA,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AACxB,SAAQ,GAAEF,WAAY,IAAGE,EAAG,EAA5B;AACD;;AACD,OAAO,SAASC,cAAT,GAA0B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,WAAnB;AACA,SAAOD,IAAI,CAACO,GAAL,CAASN,WAAT,CAAP;AACH;AAED,OAAO,SAASO,YAAT,CAAsBC,WAAtB,EAAmC;AACxC,SAAOT,IAAI,CAACO,GAAL,CAASL,YAAY,CAACO,WAAD,CAArB,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import http from \"./httpServices\";\r\n\r\nconst apiEndpoint = \"/timeEntry\";\r\n\r\nfunction timeEntryUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\nexport function getTimeEntries() {\r\n    console.log(\"test\",apiEndpoint)\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getTimeEntry(timeEntryId) {\r\n  return http.get(timeEntryUrl(timeEntryId));\r\n}\r\n\r\n// export function saveTimeEntry(timeEntry) {\r\n//   if (!timeEntry._id.startsWith(\"new\")) {\r\n//     const body = { ...timeEntry };\r\n//     delete body._id;\r\n//     delete body.week;\r\n//     delete body.workOrderDesc;\r\n//     return http.put(timeEntryUrl(timeEntry._id), body);\r\n//   } else {\r\n//     const body = { ...timeEntry };\r\n\r\n//     console.log(\"timeEntry\", timeEntry);\r\n//     delete body._id;\r\n//     delete body.week;\r\n//     delete body.workOrderDesc;\r\n//     return http.post(apiEndpoint, body);\r\n//   }\r\n// }\r\n\r\n// export function deleteTimeEntry(timeEntryId) {\r\n//   return http.delete(timeEntryUrl(timeEntryId));\r\n// }"]},"metadata":{},"sourceType":"module"}