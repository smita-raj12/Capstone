{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smita\\\\Desktop\\\\ReactWorks\\\\capstone\\\\client\\\\src\\\\components\\\\TimeEntryForm.js\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"../common/Form\";\nimport moment from \"moment\";\nimport { getWorkOrders } from \"../services/WorkOrderService\";\n\nclass TimeEntryForm extends Form {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {\n        date: \"\",\n        workOrderId: \" \",\n        week: \" \",\n        hours: \"\",\n        formType: \" \"\n      },\n      workOrders: [],\n      timeEntries: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.number(),\n      date: Joi.date().max(moment().add(3, \"months\").format(\"YYYY-MM-DD\")).min(moment().subtract(3, \"months\").format(\"YYYY-MM-DD\")).required().label(\"Date\"),\n      week: Joi.number(),\n      workOrderId: Joi.number().label(\"WorkOrderId\").required(),\n      hours: Joi.number().max(24).required(),\n      formType: Joi.string().max(24).required()\n    };\n\n    this.doSubmit = async () => {\n      this.props.onSave(this.state.data);\n    };\n\n    this.customValidation = input => {// const { date } = this.state.data;\n      // var customError = \" \";\n      // var totalHoursperday = 0;\n      // this.populateTimeEntries();\n      // const origionaltimeEntries = this.state.timeEntries;\n      // const timeEntriesforthedate = origionaltimeEntries.filter(\n      //     (m) => m.date === date\n      // );\n      // if (input.name === \"hours\") {\n      //     totalHoursperday = input.value;\n      // }\n      // for (let i = 0; i < timeEntriesforthedate.length; i++) {\n      //     if (input.name === \"workOrderId\") {\n      //         if (\n      //             timeEntriesforthedate[i].date === date &&\n      //             timeEntriesforthedate[i].workOrder._id === input.value\n      //         ) {\n      //             return (customError = \"Duplicate work order \");\n      //         }\n      //     }\n      //     if (input.name === \"hours\") {\n      //         totalHoursperday =\n      //             parseInt(totalHoursperday) + timeEntriesforthedate[i].hours;\n      //         if (totalHoursperday > 24) {\n      //             return (customError = \"Total hours per day can't be more than 24 \");\n      //         }\n      //     }\n      // }\n      // return customError > \" \" ? customError : null;\n    };\n  }\n\n  async populateWorkOrder() {\n    const {\n      data\n    } = await getWorkOrders();\n    let workOrders = [];\n    data.map(o => workOrders.push({\n      _id: o._id,\n      name: o.name,\n      desc: o.desc\n    }));\n    this.setState({\n      workOrders\n    });\n  }\n\n  populateTimeEntry() {\n    const {\n      timeEntry\n    } = this.props;\n    this.setState({\n      data: this.mapToViewModel(timeEntry)\n    });\n  }\n\n  populateTimeEntries() {\n    const {\n      timeEntries\n    } = this.props;\n    this.setState({\n      timeEntries\n    });\n  }\n\n  componentDidMount() {\n    this.populateWorkOrder();\n    this.populateTimeEntry();\n    this.populateTimeEntries();\n  }\n\n  handleSelect(workOrderId) {\n    var selectedWorkOrder = this.state.workOrders.filter(m => m._id !== workOrderId);\n    const selectedDesc = selectedWorkOrder.map(o => o.desc);\n    return !workOrderId ? \" \" : selectedDesc;\n  }\n\n  mapToViewModel(TimeEntry) {\n    return {\n      _id: TimeEntry._id,\n      date: TimeEntry.date,\n      workOrderId: TimeEntry.workOrderId,\n      week: TimeEntry.week,\n      hours: TimeEntry.hours,\n      formType: TimeEntry.formType\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, this.renderInput(\"week\", \"Week\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, this.renderInput(\"date\", \"Date\", Date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, this.renderSelect(\"workOrderId\", \"WorkOrder\", this.state.workOrders)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, this.handleSelect(this.state.data.workOrderId)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, this.renderInput(\"hours\", \"Hours\", Number)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, this.renderButton(\"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.onDelete(this.props.timeEntry),\n      className: \"btn-warn btn-sm mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Delete\"))));\n  }\n\n}\n\nexport default TimeEntryForm;","map":{"version":3,"sources":["C:/Users/smita/Desktop/ReactWorks/capstone/client/src/components/TimeEntryForm.js"],"names":["React","Joi","Form","moment","getWorkOrders","TimeEntryForm","state","data","date","workOrderId","week","hours","formType","workOrders","timeEntries","errors","schema","_id","number","max","add","format","min","subtract","required","label","string","doSubmit","props","onSave","customValidation","input","populateWorkOrder","map","o","push","name","desc","setState","populateTimeEntry","timeEntry","mapToViewModel","populateTimeEntries","componentDidMount","handleSelect","selectedWorkOrder","filter","m","selectedDesc","TimeEntry","render","handleSubmit","renderInput","Date","renderSelect","Number","renderButton","onDelete"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"../common/Form\";\r\nimport moment from \"moment\";\r\nimport { getWorkOrders } from \"../services/WorkOrderService\";\r\n\r\n\r\nclass TimeEntryForm extends Form {\r\n    state = {\r\n        data: { date: \"\",  workOrderId: \" \", week: \" \", hours: \"\", formType:\" \" },\r\n        workOrders: [],\r\n        timeEntries: [],\r\n        errors: {},\r\n    };\r\n    \r\n    schema = {\r\n        _id: Joi.number(),\r\n        date: Joi.date()\r\n            .max(moment().add(3, \"months\").format(\"YYYY-MM-DD\"))\r\n            .min(moment().subtract(3, \"months\").format(\"YYYY-MM-DD\"))\r\n            .required()\r\n            .label(\"Date\"),\r\n        week: Joi.number(),\r\n        workOrderId: Joi.number().label(\"WorkOrderId\").required(),\r\n        hours: Joi.number().max(24).required(),\r\n        formType: Joi.string().max(24).required()\r\n    };\r\n\r\n    async populateWorkOrder() {\r\n        const { data }  =  await getWorkOrders();\r\n        let workOrders = [];\r\n        \r\n        data.map((o) =>\r\n            workOrders.push({\r\n                _id: o._id,\r\n                name: o.name,\r\n                desc: o.desc,\r\n            })\r\n        );\r\n       \r\n        this.setState({ workOrders });\r\n    }\r\n    \r\n    populateTimeEntry() {\r\n        const { timeEntry } = this.props;\r\n        this.setState({ data: this.mapToViewModel(timeEntry) });\r\n    }\r\n    \r\n    populateTimeEntries() {\r\n        const { timeEntries } = this.props;\r\n        this.setState({ timeEntries });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.populateWorkOrder();\r\n        this.populateTimeEntry();\r\n        this.populateTimeEntries();\r\n    }\r\n    \r\n    doSubmit = async () => {\r\n        \r\n        this.props.onSave(this.state.data);\r\n    };\r\n\r\n    handleSelect(workOrderId) {\r\n        var selectedWorkOrder = this.state.workOrders.filter(\r\n            (m) => m._id !== workOrderId\r\n        );\r\n        const selectedDesc = selectedWorkOrder.map((o) => o.desc);\r\n        return !workOrderId ? \" \" : selectedDesc;\r\n    }\r\n\r\n    mapToViewModel(TimeEntry) {\r\n       \r\n        return {\r\n            _id: TimeEntry._id,\r\n            date: TimeEntry.date,\r\n            workOrderId: TimeEntry.workOrderId,\r\n            week: TimeEntry.week,\r\n            hours: TimeEntry.hours,\r\n            formType: TimeEntry.formType\r\n        };\r\n    }\r\n    \r\n    customValidation = (input) => {\r\n        \r\n        // const { date } = this.state.data;\r\n    \r\n        // var customError = \" \";\r\n        // var totalHoursperday = 0;\r\n\r\n        // this.populateTimeEntries();\r\n        // const origionaltimeEntries = this.state.timeEntries;\r\n       \r\n        // const timeEntriesforthedate = origionaltimeEntries.filter(\r\n        //     (m) => m.date === date\r\n        // );\r\n    \r\n        // if (input.name === \"hours\") {\r\n        //     totalHoursperday = input.value;\r\n        // }\r\n    \r\n        // for (let i = 0; i < timeEntriesforthedate.length; i++) {\r\n        //     if (input.name === \"workOrderId\") {\r\n        //         if (\r\n        //             timeEntriesforthedate[i].date === date &&\r\n        //             timeEntriesforthedate[i].workOrder._id === input.value\r\n        //         ) {\r\n        //             return (customError = \"Duplicate work order \");\r\n        //         }\r\n        //     }\r\n    \r\n        //     if (input.name === \"hours\") {\r\n        //         totalHoursperday =\r\n        //             parseInt(totalHoursperday) + timeEntriesforthedate[i].hours;\r\n        //         if (totalHoursperday > 24) {\r\n        //             return (customError = \"Total hours per day can't be more than 24 \");\r\n        //         }\r\n        //     }\r\n        // }\r\n    \r\n        // return customError > \" \" ? customError : null;\r\n    };\r\n    \r\n    \r\n    \r\n    render() {\r\n\r\n    return (\r\n        <form onSubmit={this.handleSubmit}>\r\n            <div className=\"row\">\r\n            <div className=\"mr-2\"></div>\r\n\r\n                <div className=\"col-1 m-1\">\r\n                    {this.renderInput(\"week\", \"Week\")}\r\n                </div>\r\n\r\n                <div className=\"col-2\">\r\n                    {this.renderInput(\"date\", \"Date\", Date)}\r\n                </div>\r\n\r\n                <div className=\"col-2\">\r\n                    {this.renderSelect(\r\n                        \"workOrderId\",\r\n                        \"WorkOrder\",\r\n                        this.state.workOrders\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"col-3 \">\r\n                    {this.handleSelect(this.state.data.workOrderId)}\r\n                </div>\r\n\r\n                <div className=\"col-1\">\r\n                    {this.renderInput(\"hours\", \"Hours\", Number)}\r\n                </div>\r\n\r\n                <div className=\"col\">{this.renderButton(\"Save\")}</div>\r\n                \r\n                <div className=\"col\">\r\n                <button \r\n                    onClick={() => this.props.onDelete(this.props.timeEntry)} \r\n                    className=\"btn-warn btn-sm mt-3\">\r\n                    Delete\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        )\r\n    }    \r\n} \r\n\r\n\r\nexport default TimeEntryForm;"]},"metadata":{},"sourceType":"module"}