{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smita\\\\Desktop\\\\ReactWorks\\\\capstone\\\\client\\\\src\\\\components\\\\TimeEntries.js\";\nimport React, { Component } from 'react';\nimport TimeEntryForm from './TimeEntryForm';\nimport moment from 'moment';\nimport { getTimeEntries } from '../services/TimeEntriesService';\nimport { saveTimeEntry, deleteTimeEntry } from './FakeTimeEntries';\nimport { getWorkOrders } from './FakeWorkOrders'; //import Axios from './axios';\n\nclass TimeEntries extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      timeEntries: [],\n      workOrders: [],\n      dateArray: [],\n      weekArray: [],\n      startDate: \"2021-01-01\"\n    };\n\n    this.handleSave = timeEntry => {\n      const timeEntry1 = { ...timeEntry\n      };\n      let newTimeEntry = saveTimeEntry(timeEntry1);\n      const timeEntries = this.state.timeEntries;\n      timeEntries.push({\n        _id: newTimeEntry._id,\n        date: timeEntry.date,\n        week: moment(timeEntry.date, \"MM-DD-YYYY\").week(),\n        workOrder: timeEntry.workOrderId,\n        hours: 5\n      });\n      console.log(\"timeEntries \", timeEntries);\n      this.setState({\n        timeEntries\n      });\n    };\n\n    this.handleDelete = timeEntry => {\n      const origionaltimeEntries = this.state.timeEntries;\n      const timeEntries = origionaltimeEntries.filter(m => m._id !== timeEntry._id);\n      console.log(origionaltimeEntries, timeEntry);\n      this.setState({\n        timeEntries\n      });\n      deleteTimeEntry(timeEntry._id);\n      this.setState({\n        timeEntries\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: workOrders\n    } = await getWorkOrders();\n    const {\n      data\n    } = await getTimeEntries();\n    const timeEntries = data.map(o => ({\n      _id: o._id,\n      week: moment(o.date, \"MM-DD-YYYY\").week(),\n      date: moment(o.date).format(\"MM/DD/YYYY\"),\n      workOrderId: o.workOrderId,\n      hours: o.hours\n    }));\n    console.log(timeEntries); // var dateArray = [];\n    // var weekArray = [];\n    // let prevWeekNumber = [];\n    // let weekNumber = \" \";\n    // var currentDate = moment(\n    //     moment(moment(), \"MM-DD-YYYY\").subtract(10, \"days\").format(\"MM/DD/YYYY\")\n    // );\n    // var startDate = moment(\n    //     moment(moment(), \"MM-DD-YYYY\").subtract(10, \"days\").format(\"MM/DD/YYYY\")\n    // );\n    // var stopDate = moment(\n    //     moment(moment(), \"MM-DD-YYYY\").add(10, \"days\").format(\"MM/DD/YYYY\")\n    // );\n    // var x = 0;\n    // let y = 0;\n    // while (currentDate <= stopDate) {\n    //     dateArray.push({\n    //         _id: x,\n    //         name: moment(currentDate).format(\"MM/DD/YYYY\"),\n    //     });\n    //     currentDate = moment(currentDate).add(1, \"days\");\n    //     x = x + 1;\n    //     weekNumber = moment(currentDate, \"MM-DD-YYYY\").week();\n    //     if (weekNumber !== prevWeekNumber) {\n    //         weekArray.push({\n    //             _id: y,\n    //             name: weekNumber,\n    //         });\n    //         prevWeekNumber = weekNumber;\n    //         y = y +1;\n    //     }\n    // }\n    //\n    // this.setState({ timeEntries, workOrders, dateArray, weekArray, startDate });\n\n    this.setState({\n      timeEntries\n    });\n  }\n\n  render() {\n    const {\n      timeEntries\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \" \", timeEntries.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(TimeEntryForm, {\n        timeEntry: item,\n        timeEntries: timeEntries,\n        onDelete: this.handleDelete,\n        onSave: this.handleSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default TimeEntries;","map":{"version":3,"sources":["C:/Users/smita/Desktop/ReactWorks/capstone/client/src/components/TimeEntries.js"],"names":["React","Component","TimeEntryForm","moment","getTimeEntries","saveTimeEntry","deleteTimeEntry","getWorkOrders","TimeEntries","state","timeEntries","workOrders","dateArray","weekArray","startDate","handleSave","timeEntry","timeEntry1","newTimeEntry","push","_id","date","week","workOrder","workOrderId","hours","console","log","setState","handleDelete","origionaltimeEntries","filter","m","componentDidMount","data","map","o","format","render","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,cAAR,QAA8B,gCAA9B;AAEA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,mBAA/C;AACA,SAASC,aAAT,QAA6B,kBAA7B,C,CACA;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCQ,KAFgC,GAExB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,SAAS,EAAE,EAJP;AAKJC,MAAAA,SAAS,EAAE;AALP,KAFwB;;AAAA,SAuEhCC,UAvEgC,GAuEjBC,SAAD,IAAe;AAEzB,YAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,OAAnB;AACA,UAAIE,YAAY,GAAEb,aAAa,CAACY,UAAD,CAA/B;AAEA,YAAMP,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AAGAA,MAAAA,WAAW,CAACS,IAAZ,CAAiB;AACbC,QAAAA,GAAG,EAAEF,YAAY,CAACE,GADL;AAEbC,QAAAA,IAAI,EAAEL,SAAS,CAACK,IAFH;AAGbC,QAAAA,IAAI,EAAEnB,MAAM,CAACa,SAAS,CAACK,IAAX,EAAiB,YAAjB,CAAN,CAAqCC,IAArC,EAHO;AAIbC,QAAAA,SAAS,EAAEP,SAAS,CAACQ,WAJR;AAKbC,QAAAA,KAAK,EAAE;AALM,OAAjB;AAQIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BjB,WAA5B;AACA,WAAKkB,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd;AACP,KAzF+B;;AAAA,SA2FhCmB,YA3FgC,GA2FhBb,SAAD,IAAe;AAC1B,YAAMc,oBAAoB,GAAG,KAAKrB,KAAL,CAAWC,WAAxC;AAEA,YAAMA,WAAW,GAAGoB,oBAAoB,CAACC,MAArB,CACfC,CAAD,IAAOA,CAAC,CAACZ,GAAF,KAAUJ,SAAS,CAACI,GADX,CAApB;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAYG,oBAAZ,EAAiCd,SAAjC;AACA,WAAKY,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd;AACAJ,MAAAA,eAAe,CAACU,SAAS,CAACI,GAAX,CAAf;AACA,WAAKQ,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd;AAEH,KAtG+B;AAAA;;AAaT,QAAjBuB,iBAAiB,GAAG;AACtB,UAAO;AAACC,MAAAA,IAAI,EAACvB;AAAN,QAAqB,MAAMJ,aAAa,EAA/C;AACA,UAAM;AAAE2B,MAAAA;AAAF,QAAW,MAAM9B,cAAc,EAArC;AAEA,UAAMM,WAAW,GAAGwB,IAAI,CAACC,GAAL,CAASC,CAAC,KAAG;AAC7BhB,MAAAA,GAAG,EAAGgB,CAAC,CAAChB,GADqB;AAE7BE,MAAAA,IAAI,EAACnB,MAAM,CAACiC,CAAC,CAACf,IAAH,EAAS,YAAT,CAAN,CAA6BC,IAA7B,EAFwB;AAG7BD,MAAAA,IAAI,EAAElB,MAAM,CAACiC,CAAC,CAACf,IAAH,CAAN,CAAegB,MAAf,CAAsB,YAAtB,CAHuB;AAI7Bb,MAAAA,WAAW,EAAEY,CAAC,CAACZ,WAJc;AAK7BC,MAAAA,KAAK,EAAEW,CAAC,CAACX;AALoB,KAAH,CAAV,CAApB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ,EAXsB,CAatB;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKkB,QAAL,CAAc;AAAClB,MAAAA;AAAD,KAAd;AACH;;AAqCD4B,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAC5B,MAAAA;AAAD,QAAgB,KAAKD,KAA3B;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOC,WAAW,CAACyB,GAAZ,CAAiBI,IAAD,IAAU;AACzB,0BAAO;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACnB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEP,oBAAC,aAAD;AACI,QAAA,SAAS,EAAEmB,IADf;AAEI,QAAA,WAAW,EAAE7B,WAFjB;AAGI,QAAA,QAAQ,EAAE,KAAKmB,YAHnB;AAII,QAAA,MAAM,EAAE,KAAKd,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFO,CAAP;AASH,KAVE,CAAP,CADJ,CADJ;AAgBH;;AA5H+B;;AA+HpC,eAAeP,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport TimeEntryForm from './TimeEntryForm';\r\nimport moment from 'moment';\r\nimport {getTimeEntries}  from '../services/TimeEntriesService'\r\n\r\nimport { saveTimeEntry, deleteTimeEntry } from './FakeTimeEntries';\r\nimport { getWorkOrders} from './FakeWorkOrders';\r\n//import Axios from './axios';\r\n\r\nclass TimeEntries extends Component {\r\n\r\n    state = {\r\n        timeEntries: [],\r\n        workOrders: [],\r\n        dateArray: [],\r\n        weekArray: [],\r\n        startDate: \"2021-01-01\"\r\n        \r\n    };\r\n    \r\n    \r\n    \r\n    async componentDidMount() {\r\n        const  {data:workOrders}  = await getWorkOrders();\r\n        const { data } = await getTimeEntries();\r\n\r\n        const timeEntries = data.map(o=>({\r\n            _id : o._id,\r\n            week:moment(o.date, \"MM-DD-YYYY\").week(),\r\n            date: moment(o.date).format(\"MM/DD/YYYY\"),\r\n            workOrderId: o.workOrderId,\r\n            hours: o.hours\r\n        }))\r\n        console.log(timeEntries);\r\n        \r\n        // var dateArray = [];\r\n        // var weekArray = [];\r\n        // let prevWeekNumber = [];\r\n        // let weekNumber = \" \";\r\n\r\n        // var currentDate = moment(\r\n        //     moment(moment(), \"MM-DD-YYYY\").subtract(10, \"days\").format(\"MM/DD/YYYY\")\r\n        // );\r\n\r\n        // var startDate = moment(\r\n        //     moment(moment(), \"MM-DD-YYYY\").subtract(10, \"days\").format(\"MM/DD/YYYY\")\r\n        // );\r\n\r\n        // var stopDate = moment(\r\n        //     moment(moment(), \"MM-DD-YYYY\").add(10, \"days\").format(\"MM/DD/YYYY\")\r\n        // );\r\n\r\n        // var x = 0;\r\n        // let y = 0;\r\n\r\n        // while (currentDate <= stopDate) {\r\n        //     dateArray.push({\r\n        //         _id: x,\r\n        //         name: moment(currentDate).format(\"MM/DD/YYYY\"),\r\n        //     });\r\n        //     currentDate = moment(currentDate).add(1, \"days\");\r\n        //     x = x + 1;\r\n        //     weekNumber = moment(currentDate, \"MM-DD-YYYY\").week();\r\n\r\n        //     if (weekNumber !== prevWeekNumber) {\r\n        //         weekArray.push({\r\n        //             _id: y,\r\n        //             name: weekNumber,\r\n        //         });\r\n        //         prevWeekNumber = weekNumber;\r\n        //         y = y +1;\r\n        //     }\r\n        // }\r\n        //\r\n        // this.setState({ timeEntries, workOrders, dateArray, weekArray, startDate });\r\n        this.setState({timeEntries})\r\n    }\r\n    \r\n    \r\n\r\n    handleSave =  (timeEntry) => {\r\n        \r\n        const timeEntry1 = {...timeEntry}\r\n        let newTimeEntry= saveTimeEntry(timeEntry1);\r\n\r\n        const timeEntries = this.state.timeEntries;\r\n\r\n        \r\n        timeEntries.push({\r\n            _id: newTimeEntry._id,\r\n            date: timeEntry.date,\r\n            week: moment(timeEntry.date, \"MM-DD-YYYY\").week(),\r\n            workOrder: timeEntry.workOrderId,\r\n            hours: 5,\r\n        });\r\n    \r\n            console.log(\"timeEntries \", timeEntries);\r\n            this.setState({ timeEntries });\r\n    };\r\n    \r\n    handleDelete = (timeEntry) => {\r\n        const origionaltimeEntries = this.state.timeEntries;\r\n       \r\n        const timeEntries = origionaltimeEntries.filter(\r\n            (m) => m._id !== timeEntry._id\r\n        );\r\n        console.log(origionaltimeEntries,timeEntry)\r\n        this.setState({ timeEntries });\r\n        deleteTimeEntry(timeEntry._id);\r\n        this.setState({ timeEntries });\r\n        \r\n    };\r\n\r\n    render() {\r\n\r\n        const {timeEntries} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <div> {timeEntries.map((item) => {\r\n                        return <div  key={item._id}>\r\n                                    \r\n                        <TimeEntryForm\r\n                            timeEntry={item}\r\n                            timeEntries={timeEntries}\r\n                            onDelete={this.handleDelete}\r\n                            onSave={this.handleSave}\r\n                        />\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeEntries;"]},"metadata":{},"sourceType":"module"}