{"ast":null,"code":"import http from \"./httpServices\";\nimport jwt_decode from \"jwt-decode\"; // import httpServices from \"./httpServices\";\n// import { apiUrl } from \"../config.json\";\n\nhttp.setJwt(getjwt()); //const apiEndpoint = apiUrl + \"/auth\";\n\nconst apiEndpoint = \"/auth\";\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiEndpoint, {\n    email,\n    password\n  });\n  localStorage.setItem(\"token\", jwt);\n}\nexport function loginWithJwt(jwt) {\n  localStorage.getItem(\"token\");\n}\nexport function logout() {\n  localStorage.removeItem(\"token\");\n}\nexport function getjwt() {\n  return localStorage.getItem(\"token\");\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    return jwt_decode(jwt);\n  } catch (ex) {\n    //console.log(\"test4\");\n    return null;\n  }\n}\nconst auth = {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getjwt\n};\nexport default auth;","map":{"version":3,"sources":["C:/Users/smita/Desktop/ReactWorks/capstone/client/src/services/authService.jsx"],"names":["http","jwt_decode","setJwt","getjwt","apiEndpoint","login","email","password","data","jwt","post","localStorage","setItem","loginWithJwt","getItem","logout","removeItem","getCurrentUser","ex","auth"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;AACA;;AAEAD,IAAI,CAACE,MAAL,CAAYC,MAAM,EAAlB,E,CACA;;AACA,MAAMC,WAAW,GAAG,OAApB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMT,IAAI,CAACU,IAAL,CAAUN,WAAV,EAAuB;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAvB,CAA5B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAA9B;AACD;AAED,OAAO,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;AAChCE,EAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB;AACD;AAED,OAAO,SAASC,MAAT,GAAkB;AACvBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACD;AAED,OAAO,SAASb,MAAT,GAAkB;AACvB,SAAOQ,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAP;AACD;AACD,OAAO,SAASG,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMR,GAAG,GAAGE,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAZ;AACA,WAAOb,UAAU,CAACQ,GAAD,CAAjB;AACD,GAHD,CAGE,OAAOS,EAAP,EAAW;AACX;AACA,WAAO,IAAP;AACD;AACF;AAED,MAAMC,IAAI,GAAI;AACZd,EAAAA,KADY;AAEZU,EAAAA,MAFY;AAGZE,EAAAA,cAHY;AAIZJ,EAAAA,YAJY;AAKZV,EAAAA;AALY,CAAd;AAQA,eAAegB,IAAf","sourcesContent":["import http from \"./httpServices\";\r\nimport jwt_decode from \"jwt-decode\";\r\n// import httpServices from \"./httpServices\";\r\n// import { apiUrl } from \"../config.json\";\r\n\r\nhttp.setJwt(getjwt());\r\n//const apiEndpoint = apiUrl + \"/auth\";\r\nconst apiEndpoint = \"/auth\";\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.getItem(\"token\");\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function getjwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwt_decode(jwt);\r\n  } catch (ex) {\r\n    //console.log(\"test4\");\r\n    return null;\r\n  }\r\n}\r\n\r\nconst auth  = {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  loginWithJwt,\r\n  getjwt,\r\n};\r\n\r\nexport default auth;"]},"metadata":{},"sourceType":"module"}