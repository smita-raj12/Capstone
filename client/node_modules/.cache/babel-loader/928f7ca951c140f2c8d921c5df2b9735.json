{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smita\\\\Desktop\\\\ReactWorks\\\\capstone\\\\client\\\\src\\\\components\\\\TimeEntries.js\";\nimport React, { Component } from 'react';\nimport TimeEntryForm from './TimeEntryForm';\nimport moment from 'moment';\nimport { getTimeEntries, saveTimeEntry } from '../services/TimeEntriesService';\nimport { deleteTimeEntry } from './FakeTimeEntries';\nimport { getWorkOrders } from '../services/WorkOrderService'; //import Axios from './axios';\n\nclass TimeEntries extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      timeEntries: [],\n      workOrders: [],\n      dateArray: [],\n      weekArray: [],\n      startDate: \"2021-01-01\"\n    };\n\n    this.handleSave = async timeEntry => {\n      try {\n        const {\n          data: newTimeEntry\n        } = await saveTimeEntry(timeEntry);\n\n        if (timeEntry._id.startsWith(\"new\")) {\n          const timeEntries = this.state.timeEntries;\n          timeEntries.push({\n            _id: newTimeEntry._id,\n            date: timeEntry.date,\n            week: moment(timeEntry.date, \"MM-DD-YYYY\").week(),\n            workOrder: \" \",\n            hours: \" \"\n          }); //console.log(\"timeEntries \", timeEntries);\n\n          this.setState({\n            timeEntries\n          });\n        }\n      } catch (ex) {\n        if (ex.response) console.log(\"ex.repsonse\", ex.response);\n      }\n    };\n\n    this.handleDelete = timeEntry => {\n      const origionaltimeEntries = this.state.timeEntries;\n      const timeEntries = origionaltimeEntries.filter(m => m._id !== timeEntry._id);\n      console.log(origionaltimeEntries, timeEntry);\n      this.setState({\n        timeEntries\n      });\n      deleteTimeEntry(timeEntry._id);\n      this.setState({\n        timeEntries\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: workOrders\n    } = await getWorkOrders();\n    const {\n      data\n    } = await getTimeEntries();\n    const timeEntries = data.map(o => ({\n      _id: o._id,\n      week: moment(moment(o.date).format(\"YYYY-MM-DD\")).week(),\n      date: moment(o.date).format(\"YYYY-MM-DD\"),\n      workOrderId: o.workOrderId,\n      hours: o.hours,\n      formType: \"data\"\n    }));\n    console.log(timeEntries); // var dateArray = [];\n    // var weekArray = [];\n    // let prevWeekNumber = [];\n    // let weekNumber = \" \";\n    // var currentDate = moment(\n    //     moment(moment(), \"YYYY-MM-DD\").subtract(10, \"days\").format(\"YYYY-MM-DD\")\n    // );\n    // var startDate = moment(\n    //     moment(moment(), \"YYYY-MM-DD\").subtract(10, \"days\").format(\"YYYY-MM-DD\")\n    // );\n    // var stopDate = moment(\n    //     moment(moment(), \"YYYY-MM-DD\").add(10, \"days\").format(\"YYYY-MM-DD\")\n    // );\n    // var x = 0;\n    // let y = 0;\n    // while (currentDate <= stopDate) {\n    //     dateArray.push({\n    //         _id: x,\n    //         name: moment(currentDate).format(\"YYYY-MM-DD\"),\n    //     });\n    //     currentDate = moment(currentDate).add(1, \"days\");\n    //     x = x + 1;\n    //     weekNumber = moment(currentDate, \"YYYY-MM-DD\").week();\n    //     if (weekNumber !== prevWeekNumber) {\n    //         weekArray.push({\n    //             _id: y,\n    //             name: weekNumber,\n    //         });\n    //         prevWeekNumber = weekNumber;\n    //         y = y +1;\n    //     }\n    // }\n    //\n    // this.setState({ timeEntries, workOrders, dateArray, weekArray, startDate });\n\n    this.setState({\n      timeEntries,\n      workOrders\n    });\n  }\n\n  render() {\n    const {\n      timeEntries\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \" \", timeEntries.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(TimeEntryForm, {\n        timeEntry: item // timeEntries={timeEntries}\n        ,\n        onDelete: this.handleDelete,\n        onSave: this.handleSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default TimeEntries;","map":{"version":3,"sources":["C:/Users/smita/Desktop/ReactWorks/capstone/client/src/components/TimeEntries.js"],"names":["React","Component","TimeEntryForm","moment","getTimeEntries","saveTimeEntry","deleteTimeEntry","getWorkOrders","TimeEntries","state","timeEntries","workOrders","dateArray","weekArray","startDate","handleSave","timeEntry","data","newTimeEntry","_id","startsWith","push","date","week","workOrder","hours","setState","ex","response","console","log","handleDelete","origionaltimeEntries","filter","m","componentDidMount","map","o","format","workOrderId","formType","render","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport TimeEntryForm from './TimeEntryForm';\r\nimport moment from 'moment';\r\nimport {getTimeEntries,  saveTimeEntry}  from '../services/TimeEntriesService'\r\n\r\nimport { deleteTimeEntry } from './FakeTimeEntries';\r\nimport { getWorkOrders} from '../services/WorkOrderService'\r\n\r\n//import Axios from './axios';\r\n\r\nclass TimeEntries extends Component {\r\n\r\n    state = {\r\n        timeEntries: [],\r\n        workOrders: [],\r\n        dateArray: [],\r\n        weekArray: [],\r\n        startDate: \"2021-01-01\"\r\n        \r\n    };\r\n    \r\n    \r\n    \r\n    async componentDidMount() {\r\n        const  { data:workOrders }  =  await getWorkOrders();\r\n        const { data } = await getTimeEntries();\r\n        \r\n        const timeEntries = data.map(o=>({\r\n            _id : o._id,\r\n            week: moment(moment(o.date).format(\"YYYY-MM-DD\")).week(),\r\n            date: moment(o.date).format(\"YYYY-MM-DD\"),\r\n            workOrderId: o.workOrderId,\r\n            hours: o.hours,\r\n            formType: \"data\"\r\n        }))\r\n        console.log(timeEntries);\r\n        \r\n        // var dateArray = [];\r\n        // var weekArray = [];\r\n        // let prevWeekNumber = [];\r\n        // let weekNumber = \" \";\r\n\r\n        // var currentDate = moment(\r\n        //     moment(moment(), \"YYYY-MM-DD\").subtract(10, \"days\").format(\"YYYY-MM-DD\")\r\n        // );\r\n\r\n        // var startDate = moment(\r\n        //     moment(moment(), \"YYYY-MM-DD\").subtract(10, \"days\").format(\"YYYY-MM-DD\")\r\n        // );\r\n\r\n        // var stopDate = moment(\r\n        //     moment(moment(), \"YYYY-MM-DD\").add(10, \"days\").format(\"YYYY-MM-DD\")\r\n        // );\r\n\r\n        // var x = 0;\r\n        // let y = 0;\r\n\r\n        // while (currentDate <= stopDate) {\r\n        //     dateArray.push({\r\n        //         _id: x,\r\n        //         name: moment(currentDate).format(\"YYYY-MM-DD\"),\r\n        //     });\r\n        //     currentDate = moment(currentDate).add(1, \"days\");\r\n        //     x = x + 1;\r\n        //     weekNumber = moment(currentDate, \"YYYY-MM-DD\").week();\r\n\r\n        //     if (weekNumber !== prevWeekNumber) {\r\n        //         weekArray.push({\r\n        //             _id: y,\r\n        //             name: weekNumber,\r\n        //         });\r\n        //         prevWeekNumber = weekNumber;\r\n        //         y = y +1;\r\n        //     }\r\n        // }\r\n        //\r\n        // this.setState({ timeEntries, workOrders, dateArray, weekArray, startDate });\r\n        this.setState({timeEntries, workOrders})\r\n    }\r\n    \r\n    \r\n\r\n    handleSave =  async (timeEntry) => {\r\n        \r\n        try {\r\n            const { data: newTimeEntry } = await saveTimeEntry(timeEntry);\r\n      \r\n            if (timeEntry._id.startsWith(\"new\")) {\r\n                const timeEntries = this.state.timeEntries;\r\n             \r\n      \r\n              timeEntries.push({\r\n                _id: newTimeEntry._id,\r\n                date: timeEntry.date,\r\n                week: moment(timeEntry.date, \"MM-DD-YYYY\").week(),\r\n                workOrder: \" \",\r\n                hours: \" \",\r\n              });\r\n      \r\n              //console.log(\"timeEntries \", timeEntries);\r\n              this.setState({ timeEntries });\r\n            }\r\n          } catch (ex) {\r\n            if (ex.response) console.log(\"ex.repsonse\", ex.response);\r\n          }\r\n    };\r\n    \r\n    handleDelete = (timeEntry) => {\r\n        const origionaltimeEntries = this.state.timeEntries;\r\n       \r\n        const timeEntries = origionaltimeEntries.filter(\r\n            (m) => m._id !== timeEntry._id\r\n        );\r\n        console.log(origionaltimeEntries,timeEntry)\r\n        this.setState({ timeEntries });\r\n        deleteTimeEntry(timeEntry._id);\r\n        this.setState({ timeEntries });\r\n        \r\n    };\r\n\r\n    render() {\r\n\r\n        const {timeEntries} = this.state\r\n\r\n        return (\r\n            <div>\r\n                <div> {timeEntries.map((item) => {\r\n                        return <div  key={item._id}>\r\n                                    \r\n                        <TimeEntryForm\r\n                            timeEntry={item}\r\n                            // timeEntries={timeEntries}\r\n                            onDelete={this.handleDelete}\r\n                            onSave={this.handleSave}\r\n                        />\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeEntries;"]},"metadata":{},"sourceType":"module"}